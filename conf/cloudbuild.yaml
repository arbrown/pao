steps:
        - name: 'registry.hub.docker.com/library/golang'
          args: ['go', 'version']

        - name: 'debian'
          args: ['mkdir', '-p', 'deploy/etc/systemd/system/','deploy/usr/bin', 'deploy/conf']

        - name: 'registry.hub.docker.com/library/golang'
          env: [
                      'GO111MODULE=on',
                      'GOPROXY=https://proxy.golang.org,direct',
                      'GOOS=linux',
                      'GOARCH=amd64'
            ]
          args: ['go', 'build', '-o', 'deploy/usr/bin/pao', '${_SRC_DIRECTORY}/']

        - name: 'registry.hub.docker.com/library/golang'
          env: [
                      'GO111MODULE=on',
                      'GOPROXY=https://proxy.golang.org,direct',
                      'GOOS=linux',
                      'GOARCH=amd64'
            ]
          args: ['go', 'build', '-o', 'deploy/usr/bin/flippy', '${_SRC_DIRECTORY}/ai/flippy/']
          
        - name: 'debian'
          args: ['cp', 'conf/pao.service', 'deploy/etc/systemd/system/']

        - name: 'debian'
          args: ['cp', 'conf/flippy.service', 'deploy/etc/systemd/system/']

        - name: 'node'
          entrypoint: 'npm'
          args: ['run', 'build']

        - name: 'debian'
          args: ['cp', '-R', './react-app/build', 'deploy/react-app/build']
        
        - name: 'debian'
          args: ['tar', '-czf', '${_DEPLOY_FILENAME}', '-C', './deploy', '.']
        - name: 'debian'
          args: ['ls']

artifacts:
       objects:
               location: '${_DEPLOY_DIR}'
               paths: ['${_DEPLOY_FILENAME}']
